<?php

/**
 * @file
 * Code for the REPS Videos feature.
 */

include_once 'reps_videos.features.inc';

/**
 * Implements hook_node_view_alter().
 *
 * Invoques a custom post render callback
 * to alter html.
 */
function reps_videos_node_view_alter(&$build) {
  $build['#post_render'][] = 'reps_videos_post_render';
}

/**
 * Post render callback.
 *
 * Apply cookie consent banner to videos,
 * when inserted through an iframe.
 *
 * @see reps_videos_node_view_alter()
 *
 * @return string
 *   The page html.
 */
function reps_videos_post_render($html) {

  if (_apply_cookie_consent_banner($html)) {
    $doc = new DOMDocument();
    if (LIBXML_VERSION >= 20708) {
      $doc->loadHTML(mb_convert_encoding($html, 'HTML-ENTITIES', 'UTF-8'), LIBXML_HTML_NOIMPLIED | LIBXML_HTML_NODEFDTD);
    }
    else {
      $doc->loadHTML('<?xml encoding="utf-8" ?>' . $html);
    }
    $iframes = $doc->getElementsByTagName('iframe');

    foreach ($iframes as $iframe) {
      $new_path = EC_EMBEDDED_VIDEO_COOKIE_CONSENT_WEBSERVICE_PRURL . '?oriurl=' . $iframe->getAttribute('src');
      $iframe->setAttribute('src', $new_path);
    }

    $html = html_entity_decode($doc->saveHTML());
    if (LIBXML_VERSION < 20708) {
      $html = preg_replace('/\<\?xml encoding="utf-8" \?\>/', '', $html);
    }
  }

  return $html;
}

/**
 * Helper function to apply cookie consent banner.
 *
 * Validate if cookie consent banner needs to be applied
 * on a video iframe or not.
 *
 * @see reps_videos_page_alter()
 *
 * @return bool
 *   Apply cookie consent banner to video or not.
 */
function _apply_cookie_consent_banner(&$html) {
  $banner = FALSE;

  $video_types = array(
    'youtube.com',
    'youtu.be',
    'player.cdn.tv1.eu',
    'player.vimeo.com',
    'livestream.com',
    'cdn1.cache.twofourdigital.net',
    'europa.eu',
    'embed.scribblelive.com',
    'facebook.com',
    'google.com',
    'google.be',
    'bing.com',
    'twitter.com',
    'archive.org',
    'widgets.twimg.com',
    'slideshare.net',
  );
  foreach ($video_types as $video_type) {
    if (
      !empty($html) &&
      strpos($html, 'iframe') !== FALSE &&
      strpos($html, $video_type) !== FALSE &&
      strpos($html, EC_EMBEDDED_VIDEO_COOKIE_CONSENT_WEBSERVICE_PRURL) === FALSE
    ) {
      $banner = TRUE;
    }
  }
  return $banner;
}
