<?php

/**
 * @file
 * Code for the reps core feature.
 */

include_once 'reps_core.api.inc';

/**
 * Implements hook_enable().
 */
function reps_core_enable() {
  features_revert(array(
    'reps_core' => array(
      'field_base',
      'field_instance',
      'variable',
    ),
  ));

  // Disable content types.
  multisite_drupal_toolbox_disable_content_type('article');
  multisite_drupal_toolbox_disable_content_type('flexslider_example');

  // Enable custom features.
  module_enable(array(
    'reps_admin',
    'reps_publications',
    'reps_events',
    'reps_videos',
    'reps_news',
  ));

  multisite_config_service('title')->replaceTitleField('node', 'reps_slide_footer', 'title');
  multisite_config_service('title')->replaceTitleField('node', 'reps_slide_homepage', 'title');
  multisite_config_service('title')->replaceTitleField('node', 'reps_contact_point', 'title');
  multisite_config_service('title')->replaceTitleField('node', 'reps_homepage', 'title');
  multisite_config_service('title')->replaceTitleField('node', 'reps_homepage_additional_block', 'title');

  // Override some of the options exported in multisite core features.
  _reps_core_overrides();

  // Add Block Laco.
  _reps_core_create_block_laco();
  // Add Block Share.
  _reps_core_create_block_share();
  // Add Block Twitter.
  _reps_core_create_block_twitter();

  // Override default values from CCE basic conflicts.
  variable_set('node_admin_theme', '1');
  variable_set('locale_field_language_fallback', '0');

  // Drupal set message.
  drupal_set_message(t("The REPS core feature is now active on your site"));
}

/**
 * Implements hook_disable().
 */
function reps_core_disable() {
  multisite_drupal_toolbox_disable_content_type('reps_slide_footer');
  multisite_drupal_toolbox_disable_content_type('reps_slide_homepage');
  drupal_set_message(t("The REPS core feature is now disabled on your site"));
}

/**
 * Implements hook_install().
 */
function reps_core_install() {
  // Set site name.
  variable_set('site_name', 'Reps');
  // Enable the reps subtheme.
  theme_enable(array('reps'));
  variable_set('theme_default', 'reps');
  variable_set('file_private_path', '');
  // Activate drupal search.
  $active_search = variable_get('search_active_modules');
  $active_search['node'] = 'node';
  variable_set('search_active_modules', $active_search);

  // Remove first node, created by Multisite deployment script.
  node_delete(1);

  // Create default blank pages.
  _reps_core_create_default_pages();

  $entity_translation_entity_types = array(
    'node' => 'node',
    'taxonomy_term' => 'taxonomy_term',
    'bean' => 'bean',
    'comment' => 0,
    'file' => 0,
    'user' => 0,
  );
  variable_set('entity_translation_entity_types', $entity_translation_entity_types);

  // Disable Multisite "homepage" context.
  $context = context_load('homepage');
  ctools_export_set_object_status($context);

  // Disable Multisite "site_wide" context.
  $context = context_load('site_wide');
  ctools_export_set_object_status($context);

  // Disable Multisite "workbench_moderate_all" context.
  $context = context_load('workbench_moderate_all');
  ctools_export_set_object_status($context);

  db_delete('block')
    ->condition('theme', 'reps')
    ->condition('region', 'header_top')
    ->execute();

  // Custom date format.
  db_insert('date_formats')
    ->fields(array(
      'format' => 'Y',
      'type' => 'custom',
      'locked' => 0,
    ))
    ->execute();

  // Add button for the tabs to the wysiwyg profiles.
  if (module_exists('wysiwyg')) {
    $profile = wysiwyg_profile_load('full_html');
    $profile->settings['buttons']['tabber'] = array();
    $profile->settings['buttons']['tabber']['addTab'] = 1;
    $profile->settings['buttons']['lite'] = array();
    unset($profile->settings['buttons']['lite']['lite_AcceptAll']);
    unset($profile->settings['buttons']['lite']['lite_RejectAll']);
    unset($profile->settings['buttons']['lite']['lite_AcceptOne']);
    unset($profile->settings['buttons']['lite']['lite_RejectOne']);
    unset($profile->settings['buttons']['lite']['lite_ToggleShow']);
    unset($profile->settings['buttons']['lite']['lite_ToggleTracking']);
    $settings = serialize($profile->settings);
    db_update('wysiwyg')
      ->fields(array('settings' => $settings))
      ->condition('format', 'full_html', '=')
      ->execute();
  }

  // Make the main menu translatable.
  $main_menu = menu_load('main-menu');
  $main_menu['language'] = LANGUAGE_NONE;
  $main_menu['i18n_mode'] = 5;
  menu_save($main_menu);

  // Empty the main menu.
  _reps_core_delete('main-menu');

  // Force a revert fo the menu component.
  features_revert(array('reps_core' => array('menu_custom')));
}

/**
 * Implements hook_uninstall().
 */
function reps_core_uninstall() {
  variable_set('site_name', '');
  variable_set('theme_default', 'ec_resp');
  variable_set('site_frontpage', 'node');
  theme_disable(array('reps'));
}

/**
 * Implements hook_update().
 */
function reps_core_update_7001() {
  // Activate drupal search.
  $active_search = variable_get('search_active_modules');
  $active_search['node'] = 'node';
  variable_set('search_active_modules', $active_search);
}

/**
 * Implements hook_update().
 *
 * Disable the following list of modules:
 * - multisite_metatags
 * - multisite_twitterblock
 * - page_title
 * - reps_contact_form
 * - webform_features
 * - webform
 * - nexteuropa_migrate
 * - reps_migrate
 * - weight.
 *
 * Enable the following list of modules:
 * - extlink
 * - mbp_sync
 * - media_browser_plus
 * - media_bulk_upload
 * - nexteuropa_metatags
 * - rabbit_hole.
 *
 * Revert the following list of features:
 * - admin_language
 * - nexteuropa_webtools
 * - reps_core.
 *
 * Adding webtools blocks: Laco, Twitter.
 * Overwrite some variables.
 */
function reps_core_update_7002() {
  // Disable unused modules.
  $modules_to_disable = array(
    'multisite_metatags',
    'multisite_twitterblock',
    'page_title',
    'reps_contact_form',
    'webform_features',
    'webform',
    'reps_migrate',
    'nexteuropa_migrate',
    'weight',
  );
  foreach ($modules_to_disable as $key => $module) {
    if (!module_exists($module)) {
      unset($modules_to_disable[$key]);
    }
  }
  module_disable($modules_to_disable, TRUE);
  drupal_uninstall_modules($modules_to_disable, TRUE);

  // Enable additional modules.
  $module_to_enable = array(
    'extlink',
    'mbp_sync',
    'media_browser_plus',
    'media_bulk_upload',
    'nexteuropa_metatags',
    'rabbit_hole',
  );
  module_enable($module_to_enable, TRUE);

  // Alter Media browser settings (swap old tabs with MBP tabs).
  // We update from here to avoid feature conflicts with ec_embedded_video.
  $value = array(
    0 => 'upload',
    1 => 'media_browser_plus--media_browser_thumbnails',
    2 => 'media_browser_plus--media_browser_my_files',
    3 => 'media_internet',
  );
  variable_set('media_wysiwyg_wysiwyg_browser_plugins', $value);

  // Add Block Laco.
  _reps_core_create_block_laco();
  // Add Block Share.
  _reps_core_create_block_share();
  // Add Block Twitter.
  _reps_core_create_block_twitter();

  // Override default values from CCE basic conflicts.
  variable_set('node_admin_theme', '1');
  variable_set('locale_field_language_fallback', '0');

  // Revert existing modules.
  $modules_to_revert = array(
    'admin_language',
    'nexteuropa_webtools',
    'reps_core',
  );
  foreach ($modules_to_revert as $key => $module) {
    if (!module_exists($module)) {
      unset($modules_to_revert[$key]);
    }
  }
  features_revert_module($modules_to_revert);
}

/**
 * Delete fields field_meta_classification and field_meta_description.
 */
function reps_core_update_7003() {
  field_delete_field('field_meta_classification');
  field_delete_field('field_meta_description');
}

/**
 * Remove field_reps_core_node_reference from homepage.
 */
function reps_core_update_7004() {
  if ($instance = field_info_instance('node', 'field_reps_core_node_reference', 'reps_homepage')) {
    field_delete_instance($instance);
  }
}

/**
 * Delete old permissions settings.
 */
function reps_core_update_7005() {
  // REPS administrator.
  $role = user_role_load_by_name('REPS Administrator');
  user_role_revoke_permissions($role->rid, array(
    'assign node weight',
    'set page title',
  ));
  // Administrator.
  $role = user_role_load_by_name('administrator');
  user_role_revoke_permissions($role->rid, array(
    'administer page titles',
    'assign node weight',
    'set page title',
  ));
  // Editor.
  $role = user_role_load_by_name('editor');
  user_role_revoke_permissions($role->rid, array(
    'assign node weight',
    'set page title',
  ));
}

/**
 * Disable and uninstall Weight module.
 */
function reps_core_update_7006() {
  $modules = array(
    'weight',
  );
  module_disable($modules, TRUE);
  drupal_uninstall_modules($modules);
}

/**
 * Enable Display Suite Extras (ds_extras) module.
 */
function reps_core_update_7007() {
  $module_to_enable = array(
    'ds_extras',
  );
  module_enable($module_to_enable, TRUE);
}

/**
 * Enable Ultimate Cron.
 */
function reps_core_update_7008() {
  module_enable(array('ultimate_cron'));
}


/**
 * Enable REPS WYSIWYG Accordion Plugin.
 */
function reps_core_update_7009() {
  module_enable(array('reps_accordion'));
}

/**
 * Enable xml sitemap.
 */
function reps_core_update_7010() {
  module_enable(array('xmlsitemap_node'));
}
